{"version":3,"file":"static/js/253.7a66256b.chunk.js","mappings":"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","sources":["components/common/UserNavigation.js","components/common/CompanyNavigation.js","components/layout/DashboardLayout.js","components/settings/Settings.js","components/settings/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport appConfig from \"../../config/appConfig\";\r\n\r\nconst UserNavigation = () => {\r\n  const { user, logout } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = async () => {\r\n    await logout();\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <nav className=\"bg-indigo-600\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex items-center justify-between h-16\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"flex-shrink-0\">\r\n              <Link\r\n                to=\"/user-dashboard\"\r\n                className=\"text-white font-bold text-xl flex items-center\"\r\n              >\r\n                <svg\r\n                  className=\"h-8 w-8 mr-2\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                </svg>\r\n                {appConfig.APP_NAME} Personal\r\n              </Link>\r\n            </div>\r\n            <div className=\"hidden md:block\">\r\n              <div className=\"ml-10 flex items-baseline space-x-4\">\r\n                <Link\r\n                  to=\"/employment-history\"\r\n                  className=\"text-white hover:bg-indigo-500 px-3 py-2 rounded-md text-sm font-medium flex items-center\"\r\n                >\r\n                  <svg\r\n                    className=\"h-5 w-5 mr-2\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\r\n                    />\r\n                  </svg>\r\n                  Employment History\r\n                </Link>\r\n                <Link\r\n                  to=\"/my-documents\"\r\n                  className=\"text-white hover:bg-indigo-500 px-3 py-2 rounded-md text-sm font-medium flex items-center\"\r\n                >\r\n                  <svg\r\n                    className=\"h-5 w-5 mr-2\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\r\n                    />\r\n                  </svg>\r\n                  Documents\r\n                </Link>\r\n                <Link\r\n                  to=\"/user/settings\"\r\n                  className=\"text-white hover:bg-indigo-500 px-3 py-2 rounded-md text-sm font-medium flex items-center\"\r\n                >\r\n                  <svg\r\n                    className=\"h-5 w-5 mr-2\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\r\n                    />\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                    />\r\n                  </svg>\r\n                  Settings\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            <Link\r\n              to=\"/profile\"\r\n              className=\"text-white mr-4 flex items-center hover:bg-indigo-500 px-3 py-2 rounded-md\"\r\n            >\r\n              <svg\r\n                className=\"h-5 w-5 mr-2\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                />\r\n              </svg>\r\n              {user?.first_name || user?.username}\r\n            </Link>\r\n            <button\r\n              onClick={handleLogout}\r\n              className=\"bg-indigo-700 hover:bg-indigo-800 text-white px-4 py-2 rounded-md text-sm font-medium flex items-center\"\r\n            >\r\n              <svg\r\n                className=\"h-5 w-5 mr-2\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\r\n                />\r\n              </svg>\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default UserNavigation;\r\n","import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport appConfig from \"../../config/appConfig\";\r\n\r\n\r\nconst CompanyNavigation = () => {\r\n  const { user, logout } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = async () => {\r\n    await logout();\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <nav className=\"bg-emerald-700\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex items-center justify-between h-16\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"flex-shrink-0\">\r\n              <Link\r\n                to=\"/company-dashboard\"\r\n                className=\"text-white font-bold text-xl flex items-center\"\r\n              >\r\n                <svg\r\n                  className=\"h-8 w-8 mr-2\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"\r\n                  />\r\n                </svg>\r\n                {appConfig.APP_NAME} Business\r\n              </Link>\r\n            </div>\r\n            <div className=\"hidden md:block\">\r\n              <div className=\"ml-10 flex items-baseline space-x-4\">\r\n                <Link\r\n                  to=\"/verifications/pending\"\r\n                  className=\"text-white hover:bg-emerald-600 px-3 py-2 rounded-md text-sm font-medium flex items-center\"\r\n                >\r\n                  <svg\r\n                    className=\"h-5 w-5 mr-2\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"\r\n                    />\r\n                  </svg>\r\n                  Pending Verifications\r\n                </Link>\r\n                <Link\r\n                  to=\"/verifications/completed\"\r\n                  className=\"text-white hover:bg-emerald-600 px-3 py-2 rounded-md text-sm font-medium flex items-center\"\r\n                >\r\n                  <svg\r\n                    className=\"h-5 w-5 mr-2\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                    />\r\n                  </svg>\r\n                  Completed Verifications\r\n                </Link>\r\n                <Link\r\n                  to=\"/company/settings\"\r\n                  className=\"text-white hover:bg-emerald-600 px-3 py-2 rounded-md text-sm font-medium flex items-center\"\r\n                >\r\n                  <svg\r\n                    className=\"h-5 w-5 mr-2\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\r\n                    />\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                    />\r\n                  </svg>\r\n                  Settings\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            <Link\r\n              to=\"/company/profile\"\r\n              className=\"text-white mr-4 flex items-center hover:bg-emerald-600 px-3 py-2 rounded-md\"\r\n            >\r\n              <svg\r\n                className=\"h-5 w-5 mr-2\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"\r\n                />\r\n              </svg>\r\n              {user?.company_name || user?.username}\r\n            </Link>\r\n            <button\r\n              onClick={handleLogout}\r\n              className=\"bg-emerald-800 hover:bg-emerald-900 text-white px-4 py-2 rounded-md text-sm font-medium flex items-center\"\r\n            >\r\n              <svg\r\n                className=\"h-5 w-5 mr-2\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\r\n                />\r\n              </svg>\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default CompanyNavigation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport UserNavigation from \"../common/UserNavigation\";\r\nimport CompanyNavigation from \"../common/CompanyNavigation\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\nconst DashboardLayout = ({ children, userType = \"user\" }) => {\r\n  const { user, loading } = useAuth();\r\n  // Initialize with localStorage data to prevent flashing during loading\r\n  const [actualUserType, setActualUserType] = useState(() => {\r\n    try {\r\n      const localUser = JSON.parse(localStorage.getItem(\"user\"));\r\n      if (localUser) {\r\n        return localUser.user_type === 1 ? \"company\" : \"user\";\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error parsing user from localStorage:\", error);\r\n    }\r\n    return userType;\r\n  });\r\n  \r\n  // Only update user type when user context changes, not during loading\r\n  useEffect(() => {\r\n    if (user) {\r\n      const newUserType = user.user_type === 1 ? \"company\" : \"user\";\r\n      if (newUserType !== actualUserType) {\r\n        setActualUserType(newUserType);\r\n      }\r\n    }\r\n  }, [user, actualUserType]);\r\n  \r\n  const isCompany = actualUserType === \"company\";\r\n  \r\n  // Determine which navigation component to use\r\n  const Navigation = isCompany ? CompanyNavigation : UserNavigation;\r\n  \r\n  // Set theme colors based on user type\r\n  const spinnerColor = isCompany ? \"border-emerald-500\" : \"border-indigo-500\";\r\n  const bgColor = isCompany ? \"bg-gray-50\" : \"bg-gray-100\";\r\n\r\n  if (loading) {\r\n    // During loading, use the actualUserType which is already set from localStorage\r\n    // This prevents navigation component flashing during page refresh\r\n    return (\r\n      <div className={`min-h-screen ${bgColor}`}>\r\n        <Navigation />\r\n        <div className=\"flex justify-center items-center h-[calc(100vh-4rem)]\">\r\n          <div className={`animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 ${spinnerColor}`}></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    // Check if there's a token and user in localStorage as a fallback\r\n    const token = localStorage.getItem(\"token\");\r\n    const localUser = JSON.parse(localStorage.getItem(\"user\"));\r\n    \r\n    // If we have both token and user in localStorage, but the context hasn't loaded yet\r\n    if (token && localUser) {\r\n      return (\r\n        <div className={`min-h-screen ${bgColor}`}>\r\n          <Navigation />\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n            {children}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    // If no user in context or localStorage, show login message\r\n    return (\r\n      <div className={`min-h-screen ${bgColor}`}>\r\n        <Navigation />\r\n        <div className=\"flex justify-center items-center h-[calc(100vh-4rem)]\">\r\n          <p className=\"text-lg text-gray-600\">Please log in to access the dashboard</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`min-h-screen ${bgColor}`}>\r\n      <Navigation />\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport DashboardLayout from \"../layout/DashboardLayout\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getApiUrl } from \"../../utils/config.js\";\r\n\r\nconst Settings = () => {\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n  const isCompany = user?.user_type === 1;\r\n\r\n  // Function to determine the correct dashboard path based on user type\r\n  const getDashboardPath = () => {\r\n    return isCompany ? \"/company-dashboard\" : \"/user-dashboard\";\r\n  };\r\n\r\n  // Function to get dashboard-specific styles\r\n  const getDashboardStyles = () => {\r\n    return isCompany\r\n      ? {\r\n          toggleActive: \"bg-emerald-700\",\r\n          toggleInactive: \"bg-gray-300\",\r\n          buttonPrimary:\r\n            \"bg-emerald-700 hover:bg-emerald-900 focus:ring-emerald-500\",\r\n          buttonSecondary:\r\n            \"bg-emerald-900 hover:bg-gray-50 focus:ring-emerald-500\",\r\n          focusRing: \"focus:ring-emerald-500 focus:border-emerald-500\",\r\n        }\r\n      : {\r\n          toggleActive: \"bg-indigo-600\",\r\n          toggleInactive: \"bg-gray-300\",\r\n          buttonPrimary:\r\n            \"bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500\",\r\n          buttonSecondary: \"bg-white hover:bg-gray-50 focus:ring-indigo-500\",\r\n          focusRing: \"focus:ring-indigo-500 focus:border-indigo-500\",\r\n        };\r\n  };\r\n\r\n  // Get the styles for the current dashboard\r\n  const dashboardStyles = getDashboardStyles();\r\n\r\n  // State for common settings\r\n  const [notificationSettings, setNotificationSettings] = useState({\r\n    emailNotifications: true,\r\n    smsNotifications: false,\r\n    marketingEmails: true,\r\n  });\r\n\r\n  const [privacySettings, setPrivacySettings] = useState({\r\n    profileVisibility: \"public\",\r\n    dataSharing: true,\r\n  });\r\n\r\n  const [securitySettings, setSecuritySettings] = useState({\r\n    twoFactorAuth: false,\r\n    sessionTimeout: \"30\", // minutes\r\n  });\r\n\r\n  // State for company-specific settings\r\n  const [companySettings, setCompanySettings] = useState({\r\n    autoVerification: false,\r\n    verificationNotifications: true,\r\n    publicCompanyProfile: true,\r\n  });\r\n\r\n  // State for user-specific settings\r\n  const [userSettings, setUserSettings] = useState({\r\n    autoShareDocuments: false,\r\n    documentAccessControl: \"selective\",\r\n    historyVisibility: \"verified_only\",\r\n  });\r\n\r\n  // Simulate loading settings from backend\r\n  useEffect(() => {\r\n    // In a real app, you would fetch these settings from your backend\r\n    // For now, we'll just simulate a delay\r\n    const timer = setTimeout(() => {\r\n      // Simulate fetching settings based on user type\r\n      if (isCompany) {\r\n        // Fetch company settings\r\n        console.log(\"Fetching company settings...\");\r\n      } else {\r\n        // Fetch user settings\r\n        console.log(\"Fetching user settings...\");\r\n      }\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [isCompany]);\r\n\r\n  const handleNotificationChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setNotificationSettings({\r\n      ...notificationSettings,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const handlePrivacyChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setPrivacySettings({\r\n      ...privacySettings,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleSecurityChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setSecuritySettings({\r\n      ...securitySettings,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleCompanySettingChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setCompanySettings({\r\n      ...companySettings,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const handleUserSettingChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setUserSettings({\r\n      ...userSettings,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  };\r\n\r\n  const saveSettings = async () => {\r\n    try {\r\n      // Show loading toast\r\n      const loadingToast = toast.loading(\"Saving settings...\");\r\n\r\n      // Get the authentication token\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      // Prepare the settings data based on user type\r\n      const settingsData = {\r\n        notification_settings: notificationSettings,\r\n        privacy_settings: privacySettings,\r\n        security_settings: securitySettings,\r\n        ...(isCompany\r\n          ? { company_settings: companySettings }\r\n          : { user_settings: userSettings }),\r\n      };\r\n\r\n      // Since the backend API endpoint might not be fully implemented yet,\r\n      // we'll add a fallback to sim\"api/accounts/settings/\"ulate success\r\n      try {\r\n        // Attempt to save settings to the backend\r\n        await axios.post(getApiUrl(\"api/accounts/settings/\")\r\n          ,\r\n          settingsData,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Update the loading toast to success\r\n        toast.update(loadingToast, {\r\n          render: \"Settings saved successfully\",\r\n          type: \"success\",\r\n          isLoading: false,\r\n          autoClose: 3000,\r\n        });\r\n      } catch (apiError) {\r\n        console.log(\"API endpoint not available, simulating success\");\r\n\r\n        // If the API endpoint is not available, simulate success\r\n        // In a production app, you would want to handle this differently\r\n        toast.update(loadingToast, {\r\n          render: \"Settings saved successfully (simulated)\",\r\n          type: \"success\",\r\n          isLoading: false,\r\n          autoClose: 3000,\r\n        });\r\n\r\n        // Store settings in localStorage as a fallback\r\n        localStorage.setItem(\"userSettings\", JSON.stringify(settingsData));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving settings:\", error);\r\n      toast.error(\"Failed to save settings\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DashboardLayout userType={isCompany ? \"company\" : \"user\"}>\r\n      <div className=\"bg-white shadow-sm rounded-lg p-6 mb-8\">\r\n        <h1 className=\"text-3xl font-bold text-gray-900\">Account Settings</h1>\r\n        <p className=\"mt-2 text-gray-600\">\r\n          Manage your account preferences and configurations\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"bg-white shadow-sm rounded-lg p-6 mb-8\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Notification Preferences</h2>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"font-medium text-gray-700\">\r\n                Email Notifications\r\n              </label>\r\n              <p className=\"text-sm text-gray-500\">Receive updates via email</p>\r\n            </div>\r\n            <div className=\"relative inline-block w-12 mr-2 align-middle select-none\">\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"emailNotifications\"\r\n                id=\"emailNotifications\"\r\n                checked={notificationSettings.emailNotifications}\r\n                onChange={handleNotificationChange}\r\n                className=\"toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer transition-transform\"\r\n                style={{\r\n                  transform: notificationSettings.emailNotifications\r\n                    ? \"translateX(100%)\"\r\n                    : \"translateX(0)\",\r\n                }}\r\n              />\r\n              <label\r\n                htmlFor=\"emailNotifications\"\r\n                className={`toggle-label block overflow-hidden h-6 rounded-full cursor-pointer ${\r\n                  notificationSettings.emailNotifications\r\n                    ? dashboardStyles.toggleActive\r\n                    : dashboardStyles.toggleInactive\r\n                }`}\r\n              ></label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"font-medium text-gray-700\">\r\n                SMS Notifications\r\n              </label>\r\n              <p className=\"text-sm text-gray-500\">\r\n                Receive updates via text message\r\n              </p>\r\n            </div>\r\n            <div className=\"relative inline-block w-12 mr-2 align-middle select-none\">\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"smsNotifications\"\r\n                id=\"smsNotifications\"\r\n                checked={notificationSettings.smsNotifications}\r\n                onChange={handleNotificationChange}\r\n                className=\"toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer transition-transform\"\r\n                style={{\r\n                  transform: notificationSettings.smsNotifications\r\n                    ? \"translateX(100%)\"\r\n                    : \"translateX(0)\",\r\n                }}\r\n              />\r\n              <label\r\n                htmlFor=\"smsNotifications\"\r\n                className={`toggle-label block overflow-hidden h-6 rounded-full cursor-pointer ${\r\n                  notificationSettings.smsNotifications\r\n                    ? dashboardStyles.toggleActive\r\n                    : dashboardStyles.toggleInactive\r\n                }`}\r\n              ></label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"font-medium text-gray-700\">\r\n                Marketing Emails\r\n              </label>\r\n              <p className=\"text-sm text-gray-500\">\r\n                Receive promotional content and updates\r\n              </p>\r\n            </div>\r\n            <div className=\"relative inline-block w-12 mr-2 align-middle select-none\">\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"marketingEmails\"\r\n                id=\"marketingEmails\"\r\n                checked={notificationSettings.marketingEmails}\r\n                onChange={handleNotificationChange}\r\n                className=\"toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer transition-transform\"\r\n                style={{\r\n                  transform: notificationSettings.marketingEmails\r\n                    ? \"translateX(100%)\"\r\n                    : \"translateX(0)\",\r\n                }}\r\n              />\r\n              <label\r\n                htmlFor=\"marketingEmails\"\r\n                className={`toggle-label block overflow-hidden h-6 rounded-full cursor-pointer ${\r\n                  notificationSettings.marketingEmails\r\n                    ? dashboardStyles.toggleActive\r\n                    : dashboardStyles.toggleInactive\r\n                }`}\r\n              ></label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white shadow-sm rounded-lg p-6 mb-8\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Privacy Settings</h2>\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block font-medium text-gray-700 mb-2\">\r\n              Profile Visibility\r\n            </label>\r\n            <select\r\n              name=\"profileVisibility\"\r\n              value={privacySettings.profileVisibility}\r\n              onChange={handlePrivacyChange}\r\n              className={`mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none ${dashboardStyles.focusRing} sm:text-sm rounded-md`}\r\n            >\r\n              <option value=\"public\">Public - Visible to everyone</option>\r\n              <option value=\"private\">Private - Only visible to you</option>\r\n              <option value=\"connections\">\r\n                Connections Only - Visible to verified connections\r\n              </option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"font-medium text-gray-700\">Data Sharing</label>\r\n              <p className=\"text-sm text-gray-500\">\r\n                Allow sharing your data with trusted partners\r\n              </p>\r\n            </div>\r\n            <div className=\"relative inline-block w-12 mr-2 align-middle select-none\">\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"dataSharing\"\r\n                id=\"dataSharing\"\r\n                checked={privacySettings.dataSharing}\r\n                onChange={handlePrivacyChange}\r\n                className=\"toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer transition-transform\"\r\n                style={{\r\n                  transform: privacySettings.dataSharing\r\n                    ? \"translateX(100%)\"\r\n                    : \"translateX(0)\",\r\n                }}\r\n              />\r\n              <label\r\n                htmlFor=\"dataSharing\"\r\n                className={`toggle-label block overflow-hidden h-6 rounded-full cursor-pointer ${\r\n                  privacySettings.dataSharing\r\n                    ? dashboardStyles.toggleActive\r\n                    : dashboardStyles.toggleInactive\r\n                }`}\r\n              ></label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white shadow-sm rounded-lg p-6 mb-8\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Security Settings</h2>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"font-medium text-gray-700\">\r\n                Two-Factor Authentication\r\n              </label>\r\n              <p className=\"text-sm text-gray-500\">\r\n                Add an extra layer of security to your account\r\n              </p>\r\n            </div>\r\n            <div className=\"relative inline-block w-12 mr-2 align-middle select-none\">\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"twoFactorAuth\"\r\n                id=\"twoFactorAuth\"\r\n                checked={securitySettings.twoFactorAuth}\r\n                onChange={handleSecurityChange}\r\n                className=\"toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer transition-transform\"\r\n                style={{\r\n                  transform: securitySettings.twoFactorAuth\r\n                    ? \"translateX(100%)\"\r\n                    : \"translateX(0)\",\r\n                }}\r\n              />\r\n              <label\r\n                htmlFor=\"twoFactorAuth\"\r\n                className={`toggle-label block overflow-hidden h-6 rounded-full cursor-pointer ${\r\n                  securitySettings.twoFactorAuth\r\n                    ? dashboardStyles.toggleActive\r\n                    : dashboardStyles.toggleInactive\r\n                }`}\r\n              ></label>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block font-medium text-gray-700 mb-2\">\r\n              Session Timeout (minutes)\r\n            </label>\r\n            <select\r\n              name=\"sessionTimeout\"\r\n              value={securitySettings.sessionTimeout}\r\n              onChange={handleSecurityChange}\r\n              className={`mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none ${dashboardStyles.focusRing} sm:text-sm rounded-md`}\r\n            >\r\n              <option value=\"15\">15 minutes</option>\r\n              <option value=\"30\">30 minutes</option>\r\n              <option value=\"60\">1 hour</option>\r\n              <option value=\"120\">2 hours</option>\r\n              <option value=\"240\">4 hours</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Company-specific settings */}\r\n      {isCompany && (\r\n        <div className=\"bg-white shadow-sm rounded-lg p-6 mb-8\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Company Settings</h2>\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <label className=\"font-medium text-gray-700\">\r\n                  Automatic Verification\r\n                </label>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Automatically verify employment records that match your\r\n                  database\r\n                </p>\r\n              </div>\r\n              <div className=\"relative inline-block w-12 mr-2 align-middle select-none\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"autoVerification\"\r\n                  id=\"autoVerification\"\r\n                  checked={companySettings.autoVerification}\r\n                  onChange={handleCompanySettingChange}\r\n                  className=\"toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer transition-transform\"\r\n                  style={{\r\n                    transform: companySettings.autoVerification\r\n                      ? \"translateX(100%)\"\r\n                      : \"translateX(0)\",\r\n                  }}\r\n                />\r\n                <label\r\n                  htmlFor=\"autoVerification\"\r\n                  className={`toggle-label block overflow-hidden h-6 rounded-full cursor-pointer ${\r\n                    companySettings.autoVerification\r\n                      ? dashboardStyles.toggleActive\r\n                      : dashboardStyles.toggleInactive\r\n                  }`}\r\n                ></label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <label className=\"font-medium text-gray-700\">\r\n                  Verification Notifications\r\n                </label>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Receive notifications when employment records need\r\n                  verification\r\n                </p>\r\n              </div>\r\n              <div className=\"relative inline-block w-12 mr-2 align-middle select-none\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"verificationNotifications\"\r\n                  id=\"verificationNotifications\"\r\n                  checked={companySettings.verificationNotifications}\r\n                  onChange={handleCompanySettingChange}\r\n                  className=\"toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer transition-transform\"\r\n                  style={{\r\n                    transform: companySettings.verificationNotifications\r\n                      ? \"translateX(100%)\"\r\n                      : \"translateX(0)\",\r\n                  }}\r\n                />\r\n                <label\r\n                  htmlFor=\"verificationNotifications\"\r\n                  className={`toggle-label block overflow-hidden h-6 rounded-full cursor-pointer ${\r\n                    companySettings.verificationNotifications\r\n                      ? dashboardStyles.toggleActive\r\n                      : dashboardStyles.toggleInactive\r\n                  }`}\r\n                ></label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <label className=\"font-medium text-gray-700\">\r\n                  Public Company Profile\r\n                </label>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Make your company profile visible to all users\r\n                </p>\r\n              </div>\r\n              <div className=\"relative inline-block w-12 mr-2 align-middle select-none\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"publicCompanyProfile\"\r\n                  id=\"publicCompanyProfile\"\r\n                  checked={companySettings.publicCompanyProfile}\r\n                  onChange={handleCompanySettingChange}\r\n                  className=\"toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer transition-transform\"\r\n                  style={{\r\n                    transform: companySettings.publicCompanyProfile\r\n                      ? \"translateX(100%)\"\r\n                      : \"translateX(0)\",\r\n                  }}\r\n                />\r\n                <label\r\n                  htmlFor=\"publicCompanyProfile\"\r\n                  className={`toggle-label block overflow-hidden h-6 rounded-full cursor-pointer ${\r\n                    companySettings.publicCompanyProfile\r\n                      ? dashboardStyles.toggleActive\r\n                      : dashboardStyles.toggleInactive\r\n                  }`}\r\n                ></label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* User-specific settings */}\r\n      {!isCompany && (\r\n        <div className=\"bg-white shadow-sm rounded-lg p-6 mb-8\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">User Settings</h2>\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <label className=\"font-medium text-gray-700\">\r\n                  Auto-Share Documents\r\n                </label>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Automatically share your employment documents with verified\r\n                  companies\r\n                </p>\r\n              </div>\r\n              <div className=\"relative inline-block w-12 mr-2 align-middle select-none\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"autoShareDocuments\"\r\n                  id=\"autoShareDocuments\"\r\n                  checked={userSettings.autoShareDocuments}\r\n                  onChange={handleUserSettingChange}\r\n                  className=\"toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer transition-transform\"\r\n                  style={{\r\n                    transform: userSettings.autoShareDocuments\r\n                      ? \"translateX(100%)\"\r\n                      : \"translateX(0)\",\r\n                  }}\r\n                />\r\n                <label\r\n                  htmlFor=\"autoShareDocuments\"\r\n                  className={`toggle-label block overflow-hidden h-6 rounded-full cursor-pointer ${\r\n                    userSettings.autoShareDocuments\r\n                      ? dashboardStyles.toggleActive\r\n                      : dashboardStyles.toggleInactive\r\n                  }`}\r\n                ></label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <label className=\"font-medium text-gray-700\">\r\n                  Document Access Control\r\n                </label>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Control who can access your employment documents\r\n                </p>\r\n              </div>\r\n              <select\r\n                name=\"documentAccessControl\"\r\n                id=\"documentAccessControl\"\r\n                value={userSettings.documentAccessControl}\r\n                onChange={handleUserSettingChange}\r\n                className=\"block w-40 py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n              >\r\n                <option value=\"all\">All Companies</option>\r\n                <option value=\"selective\">Selective</option>\r\n                <option value=\"none\">None</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <label className=\"font-medium text-gray-700\">\r\n                  Employment History Visibility\r\n                </label>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Control who can see your employment history\r\n                </p>\r\n              </div>\r\n              <select\r\n                name=\"historyVisibility\"\r\n                id=\"historyVisibility\"\r\n                value={userSettings.historyVisibility}\r\n                onChange={handleUserSettingChange}\r\n                className=\"block w-40 py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n              >\r\n                <option value=\"public\">Public</option>\r\n                <option value=\"verified_only\">Verified Companies Only</option>\r\n                <option value=\"private\">Private</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Save and Cancel Buttons */}\r\n      <div className=\"bg-white shadow-sm rounded-lg p-6 mb-8 flex justify-end space-x-4\">\r\n        <button\r\n          onClick={() => navigate(getDashboardPath())}\r\n          className={`px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 ${dashboardStyles.buttonSecondary} focus:outline-none focus:ring-2 focus:ring-offset-2`}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          onClick={saveSettings}\r\n          className={`px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white ${dashboardStyles.buttonPrimary} focus:outline-none focus:ring-2 focus:ring-offset-2`}\r\n        >\r\n          Save Changes\r\n        </button>\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import Settings from './Settings';\r\n\r\nexport default Settings;"],"names":["UserNavigation","user","logout","useAuth","navigate","useNavigate","_jsx","className","children","_jsxs","Link","to","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","appConfig","APP_NAME","first_name","username","onClick","async","CompanyNavigation","company_name","_ref","userType","loading","actualUserType","setActualUserType","useState","localUser","JSON","parse","localStorage","getItem","user_type","error","console","useEffect","newUserType","isCompany","Navigation","spinnerColor","bgColor","token","Settings","dashboardStyles","toggleActive","toggleInactive","buttonPrimary","buttonSecondary","focusRing","notificationSettings","setNotificationSettings","emailNotifications","smsNotifications","marketingEmails","privacySettings","setPrivacySettings","profileVisibility","dataSharing","securitySettings","setSecuritySettings","twoFactorAuth","sessionTimeout","companySettings","setCompanySettings","autoVerification","verificationNotifications","publicCompanyProfile","userSettings","setUserSettings","autoShareDocuments","documentAccessControl","historyVisibility","timer","setTimeout","log","clearTimeout","handleNotificationChange","e","name","checked","target","handlePrivacyChange","value","type","handleSecurityChange","handleCompanySettingChange","handleUserSettingChange","DashboardLayout","id","onChange","style","transform","htmlFor","loadingToast","toast","settingsData","notification_settings","privacy_settings","security_settings","company_settings","user_settings","axios","post","getApiUrl","headers","Authorization","update","render","isLoading","autoClose","apiError","setItem","stringify"],"sourceRoot":""}