{"version":3,"file":"static/js/206.c9c192e3.chunk.js","mappings":"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","sources":["components/auth/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getApiUrl } from \"../../utils/config.js\";\r\n\r\nconst ResetPassword = () => {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Obtener el token de la URL\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const token = queryParams.get(\"token\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      toast.error(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    if (newPassword.length < 8) {\r\n      toast.error(\"Password must be at least 8 characters long\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        getApiUrl(\"api/accounts/auth/reset-password/\"),\r\n        {\r\n          token,\r\n          new_password: newPassword,\r\n        }\r\n      );\r\n\r\n      toast.success(response.data?.message || \"Password successfully updated\");\r\n      setTimeout(() => {\r\n        navigate(\"/login\");\r\n      }, 2000);\r\n    } catch (error) {\r\n      if (error.response?.data?.error === \"Reset token has expired\") {\r\n        toast.error(\"The reset link has expired. Redirecting to password recovery...\");\r\n        setTimeout(() => {\r\n          navigate(\"/forgot-password\");\r\n        }, 2000);\r\n      } else {\r\n        toast.error(\r\n          error.response?.data?.error ||\r\n            \"Error resetting password. Please try again.\"\r\n        );\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!token) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"text-center text-red-600\">\r\n          Invalid or expired token. Please request a new reset link.\r\n          <div className=\"mt-4\">\r\n            <button \r\n              onClick={() => navigate(\"/forgot-password\")} \r\n              className=\"px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700\"\r\n            >\r\n              Request New Link\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Reset Password\r\n          </h2>\r\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n            Enter your new password\r\n          </p>\r\n        </div>\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div>\r\n              <label htmlFor=\"new-password\" className=\"sr-only\">\r\n                New Password\r\n              </label>\r\n              <input\r\n                id=\"new-password\"\r\n                name=\"new-password\"\r\n                type=\"password\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"New Password\"\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n                minLength={8}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"confirm-password\" className=\"sr-only\">\r\n                Confirm Password\r\n              </label>\r\n              <input\r\n                id=\"confirm-password\"\r\n                name=\"confirm-password\"\r\n                type=\"password\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Confirm New Password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                minLength={8}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className={`group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white ${\r\n                loading ? \"bg-indigo-400\" : \"bg-indigo-600 hover:bg-indigo-700\"\r\n              } focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500`}\r\n            >\r\n              {loading ? \"Processing...\" : \"Reset Password\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"names":["ResetPassword","newPassword","setNewPassword","useState","confirmPassword","setConfirmPassword","loading","setLoading","navigate","useNavigate","location","useLocation","token","URLSearchParams","search","get","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","length","toast","error","_response$data","response","axios","put","getApiUrl","new_password","success","data","message","setTimeout","_error$response","_error$response$data","_error$response2","_error$response2$data","htmlFor","id","name","type","required","placeholder","value","onChange","target","minLength","disabled","onClick"],"sourceRoot":""}