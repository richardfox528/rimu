{"version":3,"file":"static/js/17.9be6026e.chunk.js","mappings":"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","sources":["components/auth/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    username_or_email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [isloading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { login } = useAuth();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Use the login method from AuthContext instead of axios directly\r\n      const response = await login(\r\n        formData.username_or_email,\r\n        formData.password\r\n      );\r\n\r\n      // Check if email verification is required\r\n      if (response.verification_required) {\r\n        toast.info(\"Please verify your email to continue\");\r\n        // Redirect to the email verification page\r\n        navigate(\"/verify-email\");\r\n        return;\r\n      }\r\n\r\n      toast.success(\"Successful login\");\r\n\r\n      // Redirect based on user type\r\n      if (response.user && response.user.user_type !== undefined) {\r\n        if (response.user.user_type === 1) {\r\n          navigate(\"/company-dashboard\");\r\n        } else if (response.user.user_type === 2) {\r\n          navigate(\"/user-dashboard\");\r\n        } else {\r\n          // Default case for unknown user types\r\n          navigate(\"/\");\r\n          toast.info(\"Welcome! Redirecting to home page\");\r\n        }\r\n      } else {\r\n        // Handle case where user data is incomplete\r\n        navigate(\"/\");\r\n        toast.warning(\"User information incomplete. Please contact support.\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.detail || \"Error logging in\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Log In\r\n          </h2>\r\n        </div>\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div>\r\n              <label htmlFor=\"username_or_email\" className=\"sr-only\">\r\n                Username or Email\r\n              </label>\r\n              <input\r\n                id=\"username_or_email\"\r\n                name=\"username_or_email\"\r\n                type=\"text\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Username or E-mail\"\r\n                value={formData.username_or_email}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"sr-only\">\r\n                Password\r\n              </label>\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"text-sm\">\r\n              <a\r\n                href=\"/forgot-password\"\r\n                className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n              >\r\n                Forgot your password?\r\n              </a>\r\n            </div>\r\n            <div className=\"text-sm\">\r\n              <a\r\n                href=\"/register\"\r\n                className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n              >\r\n                Not a member? Join now\r\n              </a>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isloading}\r\n              className={`group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white ${\r\n                isloading\r\n                  ? \"bg-indigo-400\"\r\n                  : \"bg-indigo-600 hover:bg-indigo-700\"\r\n              } focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500`}\r\n            >\r\n              {isloading ? (\r\n                <span className=\"flex items-center justify-center\">\r\n                  <svg\r\n                    className=\"animate-spin h-5 w-5 mr-3\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <circle\r\n                      className=\"opacity-25\"\r\n                      cx=\"12\"\r\n                      cy=\"12\"\r\n                      r=\"10\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"4\"\r\n                    ></circle>\r\n                    <path\r\n                      className=\"opacity-75\"\r\n                      fill=\"currentColor\"\r\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                    ></path>\r\n                  </svg>\r\n                  Logging in...\r\n                </span>\r\n              ) : (\r\n                \"Log In\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","formData","setFormData","useState","username_or_email","password","isloading","setLoading","navigate","useNavigate","login","useAuth","handleChange","e","target","name","value","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","response","verification_required","toast","info","success","user","undefined","user_type","warning","error","_error$response","_error$response$data","data","detail","htmlFor","id","type","required","placeholder","onChange","href","disabled","viewBox","cx","cy","r","stroke","strokeWidth","fill","d"],"sourceRoot":""}